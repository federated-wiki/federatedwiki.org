{
  "title": "Improving federated wiki",
  "story": [
    {
      "type": "paragraph",
      "id": "a61095e866c3a157",
      "text": "Here I discuss things that I think would improve federated wiki. I do not yet understand all technical details about federated wiki's implementation, nor am I aware of all the reasoning behind the design choices of federated wiki, so some of these discussions may not carry much value in case they have emerged from a lack of understanding."
    },
    {
      "type": "pagefold",
      "id": "50f0b759b037d091",
      "text": "Navigation"
    },
    {
      "type": "paragraph",
      "id": "57d64641dcf608c6",
      "text": "Navigation needs improvement. Currently very complex navigational structures are projected down to a linear sequence of pages. This makes it very easy to compare multiple pages, understand them within each others contexts, and simplifies editing across pages. However, I think much can be improved both in terms first time users confusion over the navigation, as well as more advanced users understanding of the neighbourhood, origin of information, and more advanced contextual combinations."
    },
    {
      "type": "paragraph",
      "id": "8476cdfd23723227",
      "text": "Navigation is like exploring the branches of a tree. Clicking ordinary internal links expands the branches. Shift-clicking an internal link and searching start new root nodes (or sibling nodes depending on how you choose to think of navigation) displayed to the right of your currently open pages. Understanding navigation in this paradigm makes everything much more clear. This paradigm needs to be ingrained in the user interface in a way that makes navigation obvious."
    },
    {
      "type": "paragraph",
      "id": "46b0d1cfb060a3d9",
      "text": "The tree has different kinds of nodes. Nodes that belong to the same server as the root (white pages), pages that belong to other servers / roots (blue pages), and pages that are a locally stored augmentation of the neighbourhood tree (yellow pages). There are also green ones (plugin pages?) but I don't completely understand how they fit in."
    },
    {
      "type": "paragraph",
      "id": "6b3892a2cc5e6275",
      "text": "Displaying this kind of structure in the interface should make it obvious which pages will disappear when I click an internal link (i.e. all descendants of the page I am replacing). I should also be able to make arbitrary pages disappear (in case I want to compare two pages, but these two pages are separated by three levels of navigation)"
    },
    {
      "type": "paragraph",
      "id": "bd310376286a46ff",
      "text": "The navigation interface also needs to not have any dependencies on specific browser features. I should not have to close pages by clicking the back button (maybe this feature could still exist, but I need to be able to explicitly say which pages I want to disappear, without using the back button). Dragging in pages from other sites should not be dependent on drag and drop between tabs in the browser (again, this could still exist, but an improved way of doing it, that is ubiquitous across browsers and platforms is needed)"
    },
    {
      "type": "pagefold",
      "id": "d464b2658afa2f1f",
      "text": "Merging"
    },
    {
      "type": "paragraph",
      "id": "08fba3f5fecae532",
      "text": "Currently forking is a dangerous action! If you fork a page with the same name as one of the pages in your wiki, your own page is deleted forever. A merging action is needed (as well as some form of undo). This is clearly one of the biggest issues with federated wiki currently, and I the think a proper solution to this problem is crucial for federated wiki's future."
    },
    {
      "type": "paragraph",
      "id": "826ce79a5d409b8d",
      "text": "On merging: [[Question: How can I merge changes from forks?]]"
    },
    {
      "type": "paragraph",
      "id": "0190b3ea712f4797",
      "text": " "
    },
    {
      "type": "paragraph",
      "id": "877a6f67e0e59754",
      "text": "Accidental forking [https://francesbell.wordpress.com/2015/01/05/reflection-on-fedwiki-two-tales-of-two-forks/ html]"
    },
    {
      "type": "pagefold",
      "id": "0efee88571600cb2",
      "text": "Local storage, drafts and fedwiki client"
    },
    {
      "type": "paragraph",
      "id": "81b04659b2e3076a",
      "text": "Currently the federated wiki client runs in a browser - a browser in a browser. The HTML5 local storage feature is used to save changes locally on the client side. The wiki pages turn yellow and everything gets a bit confusing (especially because its difficult to figure out what is in the browser and what is on the web). If we consider federated wiki outside the context of the WWW, HTML, and browsers for a second, we might be able to come up with a better solution to the problem the local storage feature is trying to solve. "
    },
    {
      "type": "paragraph",
      "id": "7e8ef084a2a79fc7",
      "text": "It seems like people run many wikis at once for different purposes. People also seem to run wikis locally as local wikis provide a nice way of keeping personal notes or making drafts of something to publish later. Federated wiki makes it very convenient to fork pages from these local wikis or drag content across to public ones. This approach to local content seems to be much more understandable and meaningful. Instead of providing a thin local storage layer on top of existing wikis (which is unmanageable for the user), I think an ideal federated wiki client should run a fully fledged, independent wiki locally while also allow users to edit their public ones. In this way we get a nice separation of local vs public content and we provide a feature that people seems to find useful (having your own local wiki)."
    },
    {
      "type": "paragraph",
      "id": "9158be93f1e76283",
      "text": "Such an approach needs to be thought out carefully though - we might end up in a scenario where people do not publish what should be published."
    },
    {
      "type": "pagefold",
      "id": "0ac2433590dea1fe",
      "text": "Discovering content and tracing forks"
    },
    {
      "type": "paragraph",
      "id": "e741f336654c8ab0",
      "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html], Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur and George, Arthur is connected to both George and Maria, and George is only connected to Arthur. Only one connection is missing for this group of individuals to be fully connected! George was able to find Arthur's content through Maria, which he then edited. The whole point of the scenario is that Arthur then would be able to discover George's changes and everyone would be happy. HOWEVER, Arthur was only able to discover George's changes because he was connected to George in the first place. Verify this at time 2:07 of the final video in the blog post [https://www.youtube.com/watch?t=127&v=_oDR0tH1JZM youtube]"
    },
    {
      "type": "paragraph",
      "id": "5c96d3ed6bd303aa",
      "text": "There are two ways in which Mike's scenario can be fixed. "
    },
    {
      "type": "paragraph",
      "id": "6255df64a7094409",
      "text": "1. Suppose we have the following setup: Maria follows Arthur and George, George follows Maria, and Arthur follows Maria. By adopting a \"fork to like\" policy, Maria would first fork Arthur's page, then George would discover and edit it via Maria, Maria would fork George's changes, and finally Arthur would discover George's changes via Maria. Notice how this model requires Maria to \"like\" everything. George and Arthur is only able to discover each other under these conditions: there must be a path from Arthur to George and vice versa, and each node along these paths must like what Arthur and George write. Under these conditions it seems quite difficult for the right information to reach the reach the right people! (I assume this is the model Mike had intended to showcase with his example, although his scenario skipped a step and had Arthur directly connected to George)"
    },
    {
      "type": "paragraph",
      "id": "f025f58bf46bac11",
      "text": "2. I propose a model in which you can optionally (although enabled by default) choose to let the author's wiki know that you have forked content. In this way, an author's content is traceable to the all of its modified versions. Doing a bit of analysis of the network, it is probably possible to find the modifications that are most interesting to people (to your neighbourhood more specifically. We don't necessarily want the majority vote, we want the vote of people you \"trust\")."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Improving federated wiki",
        "story": []
      },
      "date": 1427025525158
    },
    {
      "item": {
        "type": "factory",
        "id": "a61095e866c3a157"
      },
      "id": "a61095e866c3a157",
      "type": "add",
      "date": 1427025527079
    },
    {
      "type": "edit",
      "id": "a61095e866c3a157",
      "item": {
        "type": "paragraph",
        "id": "a61095e866c3a157",
        "text": "Here I discuss things that I think would improve federated wiki. I do not yet understand all technical details about federated wiki's implementation, nor am I aware about the reasoning behind the design choices of federated wiki"
      },
      "date": 1427025666174
    },
    {
      "type": "edit",
      "id": "a61095e866c3a157",
      "item": {
        "type": "paragraph",
        "id": "a61095e866c3a157",
        "text": "Here I discuss things that I think would improve federated wiki. I do not yet understand all technical details about federated wiki's implementation, nor am I aware about the reasoning behind the design choices of federated wiki, so some of these discussions may not carry much value in case they have emerged from a lack of understanding."
      },
      "date": 1427025751173
    },
    {
      "item": {
        "type": "factory",
        "id": "57d64641dcf608c6"
      },
      "id": "57d64641dcf608c6",
      "type": "add",
      "after": "a61095e866c3a157",
      "date": 1427025752670
    },
    {
      "type": "edit",
      "id": "57d64641dcf608c6",
      "item": {
        "type": "paragraph",
        "id": "57d64641dcf608c6",
        "text": "Navigation needs improvement. Currently very complex navigational structures are projected down to a linear sequence of pages. This makes it very easy to compare multiple pages, understand them within each others contexts, and simplifies editing across pages."
      },
      "date": 1427026075009
    },
    {
      "type": "edit",
      "id": "a61095e866c3a157",
      "item": {
        "type": "paragraph",
        "id": "a61095e866c3a157",
        "text": "Here I discuss things that I think would improve federated wiki. I do not yet understand all technical details about federated wiki's implementation, nor am I aware of all the reasoning behind the design choices of federated wiki, so some of these discussions may not carry much value in case they have emerged from a lack of understanding."
      },
      "date": 1427026101012
    },
    {
      "type": "edit",
      "id": "57d64641dcf608c6",
      "item": {
        "type": "paragraph",
        "id": "57d64641dcf608c6",
        "text": "Navigation needs improvement. Currently very complex navigational structures are projected down to a linear sequence of pages. This makes it very easy to compare multiple pages, understand them within each others contexts, and simplifies editing across pages. However, I think much can be improved both in terms first time users confusion over the navigation, as well as more advanced users understanding of the neighbourhood, origin of information, and more advanced contextual combinations across the navigation tree / neighbourhood. "
      },
      "date": 1427026342230
    },
    {
      "type": "edit",
      "id": "57d64641dcf608c6",
      "item": {
        "type": "paragraph",
        "id": "57d64641dcf608c6",
        "text": "Navigation needs improvement. Currently very complex navigational structures are projected down to a linear sequence of pages. This makes it very easy to compare multiple pages, understand them within each others contexts, and simplifies editing across pages. However, I think much can be improved both in terms first time users confusion over the navigation, as well as more advanced users understanding of the neighbourhood, origin of information, and more advanced contextual combinations."
      },
      "date": 1427026380633
    },
    {
      "item": {
        "type": "factory",
        "id": "50f0b759b037d091"
      },
      "id": "50f0b759b037d091",
      "type": "add",
      "after": "57d64641dcf608c6",
      "date": 1427026392292
    },
    {
      "type": "edit",
      "id": "50f0b759b037d091",
      "item": {
        "type": "pagefold",
        "id": "50f0b759b037d091",
        "text": "Navigation"
      },
      "date": 1427026398893
    },
    {
      "type": "move",
      "order": [
        "a61095e866c3a157",
        "50f0b759b037d091",
        "57d64641dcf608c6"
      ],
      "id": "50f0b759b037d091",
      "date": 1427026401120
    },
    {
      "item": {
        "type": "factory",
        "id": "d464b2658afa2f1f"
      },
      "id": "d464b2658afa2f1f",
      "type": "add",
      "after": "57d64641dcf608c6",
      "date": 1427026708569
    },
    {
      "type": "edit",
      "id": "d464b2658afa2f1f",
      "item": {
        "type": "pagefold",
        "id": "d464b2658afa2f1f",
        "text": "Merging"
      },
      "date": 1427026716946
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "826ce79a5d409b8d",
        "text": "On merging: [[Question: How can I merge changes from forks?]]"
      },
      "after": "d464b2658afa2f1f",
      "id": "826ce79a5d409b8d",
      "date": 1427026724999
    },
    {
      "item": {
        "type": "paragraph",
        "id": "9f03bc2d1863a66a",
        "text": "On merging: [[Question: How can I merge changes from forks?]]"
      },
      "id": "9f03bc2d1863a66a",
      "type": "add",
      "after": "826ce79a5d409b8d",
      "date": 1427026744799
    },
    {
      "item": {
        "type": "paragraph",
        "id": "08fba3f5fecae532",
        "text": ""
      },
      "id": "08fba3f5fecae532",
      "type": "add",
      "after": "826ce79a5d409b8d",
      "date": 1427026744799
    },
    {
      "type": "edit",
      "id": "08fba3f5fecae532",
      "item": {
        "type": "paragraph",
        "id": "08fba3f5fecae532",
        "text": "Currently forking is a dangerous action! If you fork a page with the same name as one of the pages in your wiki, your own page is deleted forever. A merging action is needed. This is clearly one of the biggest issues with federated wiki currently, and I the think a proper solution to this problem is crucial for federated wiki's future."
      },
      "date": 1427026931301
    },
    {
      "item": {
        "type": "paragraph",
        "id": "8476cdfd23723227",
        "text": ""
      },
      "id": "8476cdfd23723227",
      "type": "add",
      "after": "57d64641dcf608c6",
      "date": 1427026956740
    },
    {
      "type": "edit",
      "id": "8476cdfd23723227",
      "item": {
        "type": "paragraph",
        "id": "8476cdfd23723227",
        "text": "Navigation is like exploring the branches of a tree. Clicking ordinary internal links expands the branches. Shift-clicking an internal link and searching start a new root node displayed to the right of your currently open pages. Understanding navigation in this paradigm makes everything much more clear. This navigational structure needs to be ingrained "
      },
      "date": 1427027166319
    },
    {
      "type": "edit",
      "id": "8476cdfd23723227",
      "item": {
        "type": "paragraph",
        "id": "8476cdfd23723227",
        "text": "Navigation is like exploring the branches of a tree. Clicking ordinary internal links expands the branches. Shift-clicking an internal link and searching start a new root node displayed to the right of your currently open pages. Understanding navigation in this paradigm makes everything much more clear. This paradigm needs to be ingrained in the user interface and in a way that makes navigation obvious."
      },
      "date": 1427027201802
    },
    {
      "item": {
        "type": "paragraph",
        "id": "46b0d1cfb060a3d9",
        "text": ""
      },
      "id": "46b0d1cfb060a3d9",
      "type": "add",
      "after": "8476cdfd23723227",
      "date": 1427027203598
    },
    {
      "type": "edit",
      "id": "46b0d1cfb060a3d9",
      "item": {
        "type": "paragraph",
        "id": "46b0d1cfb060a3d9",
        "text": "The tree has different kinds of nodes. Nodes that belong to the same server as the root (white pages), pages that belong to other servers / roots (blue pages), and pages that are a locally stored augmentation of the neighbourhood tree (yellow pages)."
      },
      "date": 1427027313535
    },
    {
      "item": {
        "type": "paragraph",
        "id": "6b3892a2cc5e6275",
        "text": ""
      },
      "id": "6b3892a2cc5e6275",
      "type": "add",
      "after": "46b0d1cfb060a3d9",
      "date": 1427027314931
    },
    {
      "type": "edit",
      "id": "6b3892a2cc5e6275",
      "item": {
        "type": "paragraph",
        "id": "6b3892a2cc5e6275",
        "text": "Displaying this kind of structure in the interface should make it obvious which pages will disappear when I click an internal link (the "
      },
      "date": 1427027365283
    },
    {
      "type": "edit",
      "id": "6b3892a2cc5e6275",
      "item": {
        "type": "paragraph",
        "id": "6b3892a2cc5e6275",
        "text": "Displaying this kind of structure in the interface should make it obvious which pages will disappear when I click an internal link (i.e. all descendants of the page I am replacing). "
      },
      "date": 1427027536861
    },
    {
      "item": {
        "type": "paragraph",
        "id": "bd310376286a46ff",
        "text": ""
      },
      "id": "bd310376286a46ff",
      "type": "add",
      "after": "6b3892a2cc5e6275",
      "date": 1427027538593
    },
    {
      "type": "edit",
      "id": "bd310376286a46ff",
      "item": {
        "type": "paragraph",
        "id": "bd310376286a46ff",
        "text": "The navigation interface also needs to not have any dependencies on specific browser features. I should not have to close pages by clicking the back button (maybe this feature could still exist, but I need to be able to explicitly say which pages I want to disappear). Dragging in pages from other sites should not be dependent on drag and drop between tabs on the browser (again, this could still exist, but a new way of doing it that is ub"
      },
      "date": 1427027712404
    },
    {
      "type": "edit",
      "id": "bd310376286a46ff",
      "item": {
        "type": "paragraph",
        "id": "bd310376286a46ff",
        "text": "The navigation interface also needs to not have any dependencies on specific browser features. I should not have to close pages by clicking the back button (maybe this feature could still exist, but I need to be able to explicitly say which pages I want to disappear). Dragging in pages from other sites should not be dependent on drag and drop between tabs on the browser (again, this could still exist, but a new way of doing it that is "
      },
      "date": 1427027751412
    },
    {
      "type": "edit",
      "id": "bd310376286a46ff",
      "item": {
        "type": "paragraph",
        "id": "bd310376286a46ff",
        "text": "The navigation interface also needs to not have any dependencies on specific browser features. I should not have to close pages by clicking the back button (maybe this feature could still exist, but I need to be able to explicitly say which pages I want to disappear). Dragging in pages from other sites should not be dependent on drag and drop between tabs on the browser (again, this could still exist, but an improved way of doing it that is ubiquitous across browsers and platforms is needed)"
      },
      "date": 1427027798325
    },
    {
      "type": "edit",
      "id": "bd310376286a46ff",
      "item": {
        "type": "paragraph",
        "id": "bd310376286a46ff",
        "text": "The navigation interface also needs to not have any dependencies on specific browser features. I should not have to close pages by clicking the back button (maybe this feature could still exist, but I need to be able to explicitly say which pages I want to disappear, instead of only the rightmost one). Dragging in pages from other sites should not be dependent on drag and drop between tabs on the browser (again, this could still exist, but an improved way of doing it that is ubiquitous across browsers and platforms is needed)"
      },
      "date": 1427027822731
    },
    {
      "type": "edit",
      "id": "bd310376286a46ff",
      "item": {
        "type": "paragraph",
        "id": "bd310376286a46ff",
        "text": "The navigation interface also needs to not have any dependencies on specific browser features. I should not have to close pages by clicking the back button (maybe this feature could still exist, but I need to be able to explicitly say which pages I want to disappear, instead of only the rightmost one). Dragging in pages from other sites should not be dependent on drag and drop between tabs in the browser (again, this could still exist, but an improved way of doing it that is ubiquitous across browsers and platforms is needed)"
      },
      "date": 1427027839095
    },
    {
      "type": "edit",
      "id": "46b0d1cfb060a3d9",
      "item": {
        "type": "paragraph",
        "id": "46b0d1cfb060a3d9",
        "text": "The tree has different kinds of nodes. Nodes that belong to the same server as the root (white pages), pages that belong to other servers / roots (blue pages), and pages that are a locally stored augmentation of the neighbourhood tree (yellow pages). There are also green ones (plugin pages?) but I don't completely understand how they fit in."
      },
      "date": 1427028079982
    },
    {
      "type": "edit",
      "id": "6b3892a2cc5e6275",
      "item": {
        "type": "paragraph",
        "id": "6b3892a2cc5e6275",
        "text": "Displaying this kind of structure in the interface should make it obvious which pages will disappear when I click an internal link (i.e. all descendants of the page I am replacing). I should also be able to make arbitrary pages disappear (in case I want to compare two pages, but these two pages are separated by three levels of navigation)"
      },
      "date": 1427028202974
    },
    {
      "type": "remove",
      "id": "9f03bc2d1863a66a",
      "date": 1427028366883
    },
    {
      "type": "move",
      "order": [
        "a61095e866c3a157",
        "50f0b759b037d091",
        "57d64641dcf608c6",
        "8476cdfd23723227",
        "46b0d1cfb060a3d9",
        "6b3892a2cc5e6275",
        "bd310376286a46ff",
        "d464b2658afa2f1f",
        "08fba3f5fecae532",
        "826ce79a5d409b8d"
      ],
      "id": "08fba3f5fecae532",
      "date": 1427028372931
    },
    {
      "type": "edit",
      "id": "8476cdfd23723227",
      "item": {
        "type": "paragraph",
        "id": "8476cdfd23723227",
        "text": "Navigation is like exploring the branches of a tree. Clicking ordinary internal links expands the branches. Shift-clicking an internal link and searching start new root nodes displayed to the right of your currently open pages. Understanding navigation in this paradigm makes everything much more clear. This paradigm needs to be ingrained in the user interface and in a way that makes navigation obvious."
      },
      "date": 1427106636985
    },
    {
      "type": "edit",
      "id": "8476cdfd23723227",
      "item": {
        "type": "paragraph",
        "id": "8476cdfd23723227",
        "text": "Navigation is like exploring the branches of a tree. Clicking ordinary internal links expands the branches. Shift-clicking an internal link and searching start new root nodes displayed to the right of your currently open pages. Understanding navigation in this paradigm makes everything much more clear. This paradigm needs to be ingrained in the user interface in a way that makes navigation obvious."
      },
      "date": 1427106657248
    },
    {
      "item": {
        "type": "paragraph",
        "id": "0190b3ea712f4797",
        "text": ""
      },
      "id": "0190b3ea712f4797",
      "type": "add",
      "after": "826ce79a5d409b8d",
      "date": 1427286437718
    },
    {
      "type": "edit",
      "id": "0190b3ea712f4797",
      "item": {
        "type": "paragraph",
        "id": "0190b3ea712f4797",
        "text": " "
      },
      "date": 1427286437872
    },
    {
      "item": {
        "type": "paragraph",
        "id": "877a6f67e0e59754",
        "text": ""
      },
      "id": "877a6f67e0e59754",
      "type": "add",
      "after": "0190b3ea712f4797",
      "date": 1427286437892
    },
    {
      "type": "edit",
      "id": "877a6f67e0e59754",
      "item": {
        "type": "paragraph",
        "id": "877a6f67e0e59754",
        "text": "Accidental forking [https://francesbell.wordpress.com/2015/01/05/reflection-on-fedwiki-two-tales-of-two-forks/ html]"
      },
      "date": 1427286447783
    },
    {
      "type": "edit",
      "id": "8476cdfd23723227",
      "item": {
        "type": "paragraph",
        "id": "8476cdfd23723227",
        "text": "Navigation is like exploring the branches of a tree. Clicking ordinary internal links expands the branches. Shift-clicking an internal link and searching start new root nodes (or sibling nodes depending on how you choose to think of navigation) displayed to the right of your currently open pages. Understanding navigation in this paradigm makes everything much more clear. This paradigm needs to be ingrained in the user interface in a way that makes navigation obvious."
      },
      "date": 1427289867574
    },
    {
      "type": "edit",
      "id": "bd310376286a46ff",
      "item": {
        "type": "paragraph",
        "id": "bd310376286a46ff",
        "text": "The navigation interface also needs to not have any dependencies on specific browser features. I should not have to close pages by clicking the back button (maybe this feature could still exist, but I need to be able to explicitly say which pages I want to disappear, without using the back button). Dragging in pages from other sites should not be dependent on drag and drop between tabs in the browser (again, this could still exist, but an improved way of doing it that is ubiquitous across browsers and platforms is needed)"
      },
      "date": 1427289968455
    },
    {
      "type": "edit",
      "id": "bd310376286a46ff",
      "item": {
        "type": "paragraph",
        "id": "bd310376286a46ff",
        "text": "The navigation interface also needs to not have any dependencies on specific browser features. I should not have to close pages by clicking the back button (maybe this feature could still exist, but I need to be able to explicitly say which pages I want to disappear, without using the back button). Dragging in pages from other sites should not be dependent on drag and drop between tabs in the browser (again, this could still exist, but an improved way of doing it, that is ubiquitous across browsers and platforms is needed)"
      },
      "date": 1427289992538
    },
    {
      "type": "edit",
      "id": "08fba3f5fecae532",
      "item": {
        "type": "paragraph",
        "id": "08fba3f5fecae532",
        "text": "Currently forking is a dangerous action! If you fork a page with the same name as one of the pages in your wiki, your own page is deleted forever. A merging action is needed (as well as some form of undo). This is clearly one of the biggest issues with federated wiki currently, and I the think a proper solution to this problem is crucial for federated wiki's future."
      },
      "date": 1427290025426
    },
    {
      "item": {
        "type": "pagefold",
        "id": "0efee88571600cb2",
        "text": "Local storage, drafts and fedwiki client"
      },
      "id": "0efee88571600cb2",
      "type": "add",
      "after": "877a6f67e0e59754",
      "date": 1430914801957
    },
    {
      "type": "edit",
      "id": "0efee88571600cb2",
      "item": {
        "type": "pagefold",
        "id": "0efee88571600cb2",
        "text": "Local storage, drafts and fedwiki client"
      },
      "date": 1430914835318
    },
    {
      "item": {
        "type": "paragraph",
        "id": "81b04659b2e3076a",
        "text": "Currently the federated wiki client runs in a browser - a browser in a browser. The HTML5 local storage feature is used to save changes locally on the client side. The wiki pages turn yellow and everything gets a bit confusing (especially because its difficult to figure out what is in the browser and what is on the web). If we consider federated wiki outside the context of the WWW, HTML, and browsers for a second, we might be able to come up with a better solution to the problem the local storage feature is trying to solve. "
      },
      "id": "81b04659b2e3076a",
      "type": "add",
      "after": "0efee88571600cb2",
      "date": 1430914838109
    },
    {
      "type": "edit",
      "id": "81b04659b2e3076a",
      "item": {
        "type": "paragraph",
        "id": "81b04659b2e3076a",
        "text": "Currently the federated wiki client runs in a browser - a browser in a browser. The HTML5 local storage feature is used to save changes locally on the client side. The wiki pages turn yellow and everything gets a bit confusing (especially because its difficult to figure out what is in the browser and what is on the web). If we consider federated wiki outside the context of the WWW, HTML, and browsers for a second, we might be able to come up with a better solution to the problem the local storage feature is trying to solve. "
      },
      "date": 1430915160249
    },
    {
      "item": {
        "type": "paragraph",
        "id": "7e8ef084a2a79fc7",
        "text": "It seems like people run many wikis at once for different purposes. People also seem to run wikis locally as local wikis provide a nice way of keeping personal notes or making drafts of something to publish later. Federated wiki makes it very convenient to fork pages from these local wikis or drag content across to public ones. This approach to local content seems to be much more understandable and meaningful. Instead of providing a thin local storage layer on top of existing wikis (which is unmanageable for the user), I think an ideal federated wiki client should run a fully fledged, independent wiki locally while also allow users to edit their public ones. In this way we get a nice separation of local vs public content and we provide a feature that people seems to find useful (having your own local wiki)."
      },
      "id": "7e8ef084a2a79fc7",
      "type": "add",
      "after": "81b04659b2e3076a",
      "date": 1430915161888
    },
    {
      "type": "edit",
      "id": "7e8ef084a2a79fc7",
      "item": {
        "type": "paragraph",
        "id": "7e8ef084a2a79fc7",
        "text": "It seems like people run many wikis at once for different purposes. People also seem to run wikis locally as local wikis provide a nice way of keeping personal notes or making drafts of something to publish later. Federated wiki makes it very convenient to fork pages from these local wikis or drag content across to public ones. This approach to local content seems to be much more understandable and meaningful. Instead of providing a thin local storage layer on top of existing wikis (which is unmanageable for the user), I think an ideal federated wiki client should run a fully fledged, independent wiki locally while also allow users to edit their public ones. In this way we get a nice separation of local vs public content and we provide a feature that people seems to find useful (having your own local wiki)."
      },
      "date": 1430915602553
    },
    {
      "type": "edit",
      "id": "7e8ef084a2a79fc7",
      "item": {
        "type": "paragraph",
        "id": "7e8ef084a2a79fc7",
        "text": "It seems like people run many wikis at once for different purposes. People also seem to run wikis locally as local wikis provide a nice way of keeping personal notes or making drafts of something to publish later. Federated wiki makes it very convenient to fork pages from these local wikis or drag content across to public ones. This approach to local content seems to be much more understandable and meaningful. Instead of providing a thin local storage layer on top of existing wikis (which is unmanageable for the user), I think an ideal federated wiki client should run a fully fledged, independent wiki locally while also allow users to edit their public ones. In this way we get a nice separation of local vs public content and we provide a feature that people seems to find useful (having your own local wiki)."
      },
      "date": 1430915659907
    },
    {
      "type": "edit",
      "id": "7e8ef084a2a79fc7",
      "item": {
        "type": "paragraph",
        "id": "7e8ef084a2a79fc7",
        "text": "It seems like people run many wikis at once for different purposes. People also seem to run wikis locally as local wikis provide a nice way of keeping personal notes or making drafts of something to publish later. Federated wiki makes it very convenient to fork pages from these local wikis or drag content across to public ones. This approach to local content seems to be much more understandable and meaningful. Instead of providing a thin local storage layer on top of existing wikis (which is unmanageable for the user), I think an ideal federated wiki client should run a fully fledged, independent wiki locally while also allow users to edit their public ones. In this way we get a nice separation of local vs public content and we provide a feature that people seems to find useful (having your own local wiki)."
      },
      "date": 1430915694933
    },
    {
      "item": {
        "type": "paragraph",
        "id": "9158be93f1e76283",
        "text": "Such an approach needs to be thought out carefully though - we might end up in a scenario where people do not publish what should be published."
      },
      "id": "9158be93f1e76283",
      "type": "add",
      "after": "7e8ef084a2a79fc7",
      "date": 1430915717526
    },
    {
      "type": "edit",
      "id": "9158be93f1e76283",
      "item": {
        "type": "paragraph",
        "id": "9158be93f1e76283",
        "text": "Such an approach needs to be thought out carefully though - we might end up in a scenario where people do not publish what should be published."
      },
      "date": 1430915807089
    },
    {
      "item": {
        "type": "pagefold",
        "id": "0ac2433590dea1fe",
        "text": "Optionally let people now that you forked their content"
      },
      "id": "0ac2433590dea1fe",
      "type": "add",
      "after": "9158be93f1e76283",
      "date": 1430915898381
    },
    {
      "type": "edit",
      "id": "0ac2433590dea1fe",
      "item": {
        "type": "pagefold",
        "id": "0ac2433590dea1fe",
        "text": "Optionally let people now that you forked their content"
      },
      "date": 1430915922773
    },
    {
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "It seems l"
      },
      "id": "e741f336654c8ab0",
      "type": "add",
      "after": "0ac2433590dea1fe",
      "date": 1430915924637
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "It seems l"
      },
      "date": 1430915944767
    },
    {
      "type": "edit",
      "id": "7e8ef084a2a79fc7",
      "item": {
        "type": "paragraph",
        "id": "7e8ef084a2a79fc7",
        "text": "It seems like people run many wikis at once for different purposes. People also seem to run wikis locally as local wikis provide a nice way of keeping personal notes or making drafts of something to publish later. Federated wiki makes it very convenient to fork pages from these local wikis or drag content across to public ones. This approach to local content seems to be much more understandable and meaningful. Instead of providing a thin local storage layer on top of existing wikis (which is unmanageable for the user), I think an ideal federated wiki client should run a fully fledged, independent wiki locally while also allow users to edit their public ones. In this way we get a nice separation of local vs public content and we provide a feature that people seems to find useful (having your own local wiki)."
      },
      "date": 1430916119772,
      "error": {
        "type": "error",
        "msg": "",
        "response": ""
      }
    },
    {
      "type": "edit",
      "id": "7e8ef084a2a79fc7",
      "item": {
        "type": "paragraph",
        "id": "7e8ef084a2a79fc7",
        "text": "It seems like people run many wikis at once for different purposes. People also seem to run wikis locally as local wikis provide a nice way of keeping personal notes or making drafts of something to publish later. Federated wiki makes it very convenient to fork pages from these local wikis or drag content across to public ones. This approach to local content seems to be much more understandable and meaningful. Instead of providing a thin local storage layer on top of existing wikis (which is unmanageable for the user), I think an ideal federated wiki client should run a fully fledged, independent wiki locally while also allow users to edit their public ones. In this way we get a nice separation of local vs public content and we provide a feature that people seems to find useful (having your own local wiki)."
      },
      "date": 1430916144048,
      "error": {
        "type": "error",
        "msg": "",
        "response": ""
      }
    },
    {
      "type": "fork",
      "date": 1430916200160,
      "error": {
        "type": "error",
        "msg": "",
        "response": ""
      }
    },
    {
      "type": "fork",
      "date": 1430916226866,
      "error": {
        "type": "error",
        "msg": "",
        "response": ""
      }
    },
    {
      "type": "fork",
      "date": 1430916336683
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html] Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur C. Clarke,"
      },
      "date": 1430916567422
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html] Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur and George, Arthur is connected to both George and Maria, and George is only connected to Arthur. Only one connection is missing for this group of individual to be fully connected! Arthur was only able to comment on "
      },
      "date": 1430916746442
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html] Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur and George, Arthur is connected to both George and Maria, and George is only connected to Arthur. Only one connection is missing for this group of individual to be fully connected! George was able to find Arthur's content through Maria, which he then edited. The whole point of the scenario is that Arthur then would be able to discover George's changes and everyone would be happy. HOWEVER, Arthur was only able to discover George's changes because he was connected to George in the first place. "
      },
      "date": 1430916928696
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html], Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur and George, Arthur is connected to both George and Maria, and George is only connected to Arthur. Only one connection is missing for this group of individual to be fully connected! George was able to find Arthur's content through Maria, which he then edited. The whole point of the scenario is that Arthur then would be able to discover George's changes and everyone would be happy. HOWEVER, Arthur was only able to discover George's changes because he was connected to George in the first place. "
      },
      "date": 1430916967433
    },
    {
      "item": {
        "type": "factory",
        "id": "5c96d3ed6bd303aa"
      },
      "id": "5c96d3ed6bd303aa",
      "type": "add",
      "after": "e741f336654c8ab0",
      "date": 1430917014532
    },
    {
      "type": "edit",
      "id": "5c96d3ed6bd303aa",
      "item": {
        "type": "paragraph",
        "id": "5c96d3ed6bd303aa",
        "text": "There are two ways in which Mike's scenario can be fixed. "
      },
      "date": 1430917072020
    },
    {
      "type": "add",
      "id": "6255df64a7094409",
      "item": {
        "type": "paragraph",
        "id": "6255df64a7094409",
        "text": "1. Suppose we have the following setup - Maria follows Arthur and George, George follows Maria, and Arthur follows Maria. By adopting a \"for to like\" policy Maria would first fork Arthur's page, then George would discover and edit it via Maria, Maria would fork George's changes, and finally Arthur would discover George's changes via Maria. Notice how this model requires Maria to \"like\" everything. George and Arthur is only able to discover each other under these conditions: there must be a path from Arthur to George and vice versa, and each node along these paths must like what Arthur and George write. Under these conditions it seems quite difficult for the right information to reach the reach the right people!"
      },
      "after": "5c96d3ed6bd303aa",
      "date": 1430917393494
    },
    {
      "type": "edit",
      "id": "6255df64a7094409",
      "item": {
        "type": "paragraph",
        "id": "6255df64a7094409",
        "text": "1. Suppose we have the following setup - Maria follows Arthur and George, George follows Maria, and Arthur follows Maria. By adopting a \"fork to like\" policy Maria would first fork Arthur's page, then George would discover and edit it via Maria, Maria would fork George's changes, and finally Arthur would discover George's changes via Maria. Notice how this model requires Maria to \"like\" everything. George and Arthur is only able to discover each other under these conditions: there must be a path from Arthur to George and vice versa, and each node along these paths must like what Arthur and George write. Under these conditions it seems quite difficult for the right information to reach the reach the right people!"
      },
      "date": 1430917406236
    },
    {
      "type": "edit",
      "id": "6255df64a7094409",
      "item": {
        "type": "paragraph",
        "id": "6255df64a7094409",
        "text": "1. Suppose we have the following setup - Maria follows Arthur and George, George follows Maria, and Arthur follows Maria. By adopting a \"fork to like\" policy, Maria would first fork Arthur's page, then George would discover and edit it via Maria, Maria would fork George's changes, and finally Arthur would discover George's changes via Maria. Notice how this model requires Maria to \"like\" everything. George and Arthur is only able to discover each other under these conditions: there must be a path from Arthur to George and vice versa, and each node along these paths must like what Arthur and George write. Under these conditions it seems quite difficult for the right information to reach the reach the right people!"
      },
      "date": 1430917413364
    },
    {
      "item": {
        "type": "factory",
        "id": "f025f58bf46bac11"
      },
      "id": "f025f58bf46bac11",
      "type": "add",
      "after": "6255df64a7094409",
      "date": 1430917457317
    },
    {
      "type": "edit",
      "id": "f025f58bf46bac11",
      "item": {
        "type": "paragraph",
        "id": "f025f58bf46bac11",
        "text": "2. I propose a model in which you can optionally (although enabled by default) choose to let the author's wiki know that you have forked content. In this way, an author's content is traceable to the all of its modified versions. Doing a bit of analysis of the network it is probably possible to find the modifications that are most interesting to people (to your neighbourhood more specifically. We don't necessarily want the majority vote, we want the vote of people you \"trust\")."
      },
      "date": 1430917767544
    },
    {
      "type": "edit",
      "id": "6255df64a7094409",
      "item": {
        "type": "paragraph",
        "id": "6255df64a7094409",
        "text": "1. Suppose we have the following setup - Maria follows Arthur and George, George follows Maria, and Arthur follows Maria. By adopting a \"fork to like\" policy, Maria would first fork Arthur's page, then George would discover and edit it via Maria, Maria would fork George's changes, and finally Arthur would discover George's changes via Maria. Notice how this model requires Maria to \"like\" everything. George and Arthur is only able to discover each other under these conditions: there must be a path from Arthur to George and vice versa, and each node along these paths must like what Arthur and George write. Under these conditions it seems quite difficult for the right information to reach the reach the right people! (I assume this is the model Mike had intended to showcase with his scenario, although his scenario skipped a step and had Arthur directly connected to George)"
      },
      "date": 1430917907227
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html], Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur and George, Arthur is connected to both George and Maria, and George is only connected to Arthur. Only one connection is missing for this group of individual to be fully connected! George was able to find Arthur's content through Maria, which he then edited. The whole point of the scenario is that Arthur then would be able to discover George's changes and everyone would be happy. HOWEVER, Arthur was only able to discover George's changes because he was connected to George in the first place. Verify this at time 2:07"
      },
      "date": 1430918030659
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html], Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur and George, Arthur is connected to both George and Maria, and George is only connected to Arthur. Only one connection is missing for this group of individual to be fully connected! George was able to find Arthur's content through Maria, which he then edited. The whole point of the scenario is that Arthur then would be able to discover George's changes and everyone would be happy. HOWEVER, Arthur was only able to discover George's changes because he was connected to George in the first place. Verify this at time 2:07 of [https://www.youtube.com/watch?t=127&v=_oDR0tH1JZM youtube]"
      },
      "date": 1430918050548
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html], Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur and George, Arthur is connected to both George and Maria, and George is only connected to Arthur. Only one connection is missing for this group of individual to be fully connected! George was able to find Arthur's content through Maria, which he then edited. The whole point of the scenario is that Arthur then would be able to discover George's changes and everyone would be happy. HOWEVER, Arthur was only able to discover George's changes because he was connected to George in the first place. Verify this at time 2:07 of the final video in the blog post [https://www.youtube.com/watch?t=127&v=_oDR0tH1JZM youtube]"
      },
      "date": 1430918069369
    },
    {
      "type": "edit",
      "id": "6255df64a7094409",
      "item": {
        "type": "paragraph",
        "id": "6255df64a7094409",
        "text": "1. Suppose we have the following setup - Maria follows Arthur and George, George follows Maria, and Arthur follows Maria. By adopting a \"fork to like\" policy, Maria would first fork Arthur's page, then George would discover and edit it via Maria, Maria would fork George's changes, and finally Arthur would discover George's changes via Maria. Notice how this model requires Maria to \"like\" everything. George and Arthur is only able to discover each other under these conditions: there must be a path from Arthur to George and vice versa, and each node along these paths must like what Arthur and George write. Under these conditions it seems quite difficult for the right information to reach the reach the right people! (I assume this is the model Mike had intended to showcase with his example, although his scenario skipped a step and had Arthur directly connected to George)"
      },
      "date": 1430918102750
    },
    {
      "type": "edit",
      "id": "0ac2433590dea1fe",
      "item": {
        "type": "pagefold",
        "id": "0ac2433590dea1fe",
        "text": "Discovering content and tracing forks"
      },
      "date": 1430918202384
    },
    {
      "type": "edit",
      "id": "e741f336654c8ab0",
      "item": {
        "type": "paragraph",
        "id": "e741f336654c8ab0",
        "text": "In his blog post [http://hapgood.us/2014/11/06/federated-education-new-directions-in-digital-collaboration/ html], Mike Caulfield describes how federated wiki provides a new approach for online collaboration in which relevant information flows naturally to the people who need it. As I've pointed out in a comment on the blog post, Mike's example scenario has a major weakness - it requires the individuals to be directly or indirectly following each other in order to discover the relevant content. In the example Maria is connected to both Arthur and George, Arthur is connected to both George and Maria, and George is only connected to Arthur. Only one connection is missing for this group of individuals to be fully connected! George was able to find Arthur's content through Maria, which he then edited. The whole point of the scenario is that Arthur then would be able to discover George's changes and everyone would be happy. HOWEVER, Arthur was only able to discover George's changes because he was connected to George in the first place. Verify this at time 2:07 of the final video in the blog post [https://www.youtube.com/watch?t=127&v=_oDR0tH1JZM youtube]"
      },
      "date": 1430918265647
    },
    {
      "type": "edit",
      "id": "f025f58bf46bac11",
      "item": {
        "type": "paragraph",
        "id": "f025f58bf46bac11",
        "text": "2. I propose a model in which you can optionally (although enabled by default) choose to let the author's wiki know that you have forked content. In this way, an author's content is traceable to the all of its modified versions. Doing a bit of analysis of the network, it is probably possible to find the modifications that are most interesting to people (to your neighbourhood more specifically. We don't necessarily want the majority vote, we want the vote of people you \"trust\")."
      },
      "date": 1430918380921
    },
    {
      "type": "edit",
      "id": "6255df64a7094409",
      "item": {
        "type": "paragraph",
        "id": "6255df64a7094409",
        "text": "1. Suppose we have the following setup: Maria follows Arthur and George, George follows Maria, and Arthur follows Maria. By adopting a \"fork to like\" policy, Maria would first fork Arthur's page, then George would discover and edit it via Maria, Maria would fork George's changes, and finally Arthur would discover George's changes via Maria. Notice how this model requires Maria to \"like\" everything. George and Arthur is only able to discover each other under these conditions: there must be a path from Arthur to George and vice versa, and each node along these paths must like what Arthur and George write. Under these conditions it seems quite difficult for the right information to reach the reach the right people! (I assume this is the model Mike had intended to showcase with his example, although his scenario skipped a step and had Arthur directly connected to George)"
      },
      "date": 1430918461719
    }
  ]
}