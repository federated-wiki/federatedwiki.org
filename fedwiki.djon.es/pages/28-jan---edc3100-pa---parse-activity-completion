{
  "title": "28 Jan - EDC3100 PA - parse activity completion",
  "story": [
    {
      "type": "markdown",
      "id": "2b0b5da39374a4a3",
      "text": "##To do"
    },
    {
      "type": "html",
      "id": "d447cf1d37bf52dd",
      "text": "<ol>\n  <li> parseCompletion.pl <strong>DONE</strong>\n     <p>Will need to highlight students in the completion report that aren't in the local database (and then link with #3 below).\n</li>\n <li> Test activity completion reports </li>\n  <li> import students\n      <p>For existing courses the students user accounts are already imported. But not in a new course. These need to be imported (mapping between local and remote)</li>\n  <li> Will need to update ActivityCompletion.pm </li>\n  <li> Back to process analytics </li>\n</ol>"
    },
    {
      "type": "markdown",
      "id": "040085226c6e10c7",
      "text": "##parseCompletion.pl\n"
    },
    {
      "type": "html",
      "id": "136c61b4af894409",
      "text": "<p>Time to modify/build on existing import.pl so that it</p>\n<ol>\n  <li> Updates activity_mapping appropriately to add in short_name </li>\n  <li> updates the course complete table with the user completion data. </li>\n</ol>"
    },
    {
      "type": "paragraph",
      "id": "d6206a6814694798",
      "text": "Done - modified existing script to do the parse completion."
    },
    {
      "type": "markdown",
      "id": "5793f4d9879b2a65",
      "text": "##Process analytics"
    },
    {
      "type": "html",
      "id": "6e5bf18f816e1ded",
      "text": "<p>activity_mapping table gives the number of activities per course and per topic/week. </p>\n<p><em>Missing:</em> which modules the topics belong to. URLs for the activities. </p>\n<p>mdl_course_modules_completion table gives the activities that have been completed by the student</p>\n<p>Process will be something like</p>\n<ol>\n  <li> Use activity mapping to calculate total number of activities and also # activities per week </li>\n  <li> Will have to hard code and/or create another table to group weeks into Modules. \n  <p>module_topic_mapping: [ id, course_id, module_name, module_num, topic_num, topic_name ] (maybe not name)</p>\n  </li>\n  <li> Use course modules completion table to get the details about what the user has completed.</li>\n</ol>\n<p>To calculate what the user has completed per module/week - will need to link via activity id.  </p>\n<p>Perhaps user completion is hash based on activity id</p>\n<p>Then each module has a structure for each week and each activity, that includes at some level an activity id.</p>\n<p>This can get populated.</p>"
    },
    {
      "type": "html",
      "id": "d83cea7274939a61",
      "text": "<strong>Steps</strong>\n<ol>\n  <li> <strong>IMPORTANT</strong> Will now have problems (probably) about talking to the correct Postgres database. \n  \n     <p>??? Can we modify Perl scripts to write to the new database, not the old? </p><p>May not need to, the php on the server is still pointing to the old database.</p>\n</li>\n  <li> Get process analytics showing how many activities a student has completed and perhaps a percentage. \n    <p>  Basically done.</p>\n</li>\n  <li> Then think about the broader display and doing the same per week and module\n\n   </li>\n</ol>"
    },
    {
      "type": "factory",
      "id": "02bbc6e03813d2df"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "28 Jan - EDC3100 PA - parse activity completion",
        "story": []
      },
      "date": 1422388258931
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "040085226c6e10c7",
        "text": "##parseCompletion.pl\n"
      },
      "id": "040085226c6e10c7",
      "date": 1422388269813
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "136c61b4af894409",
        "text": "<p>Time to modify/build on existing import.pl so that it</p>\n<ol>\n  <li> Updates activity_mapping appropriately to add in short_name </li>\n  <li> updates the course complete table with the user completion data. </li>\n</ol>"
      },
      "after": "040085226c6e10c7",
      "id": "136c61b4af894409",
      "date": 1422388275881
    },
    {
      "item": {
        "type": "factory",
        "id": "2b0b5da39374a4a3"
      },
      "id": "2b0b5da39374a4a3",
      "type": "add",
      "after": "136c61b4af894409",
      "date": 1422388287089
    },
    {
      "type": "edit",
      "id": "2b0b5da39374a4a3",
      "item": {
        "type": "markdown",
        "id": "2b0b5da39374a4a3",
        "text": "##To do"
      },
      "date": 1422388294417
    },
    {
      "item": {
        "type": "factory",
        "id": "d447cf1d37bf52dd"
      },
      "id": "d447cf1d37bf52dd",
      "type": "add",
      "after": "2b0b5da39374a4a3",
      "date": 1422388301221
    },
    {
      "type": "edit",
      "id": "d447cf1d37bf52dd",
      "item": {
        "type": "html",
        "id": "d447cf1d37bf52dd",
        "text": "<ol>\n  <li> parseCompletion.pl \n     <p>Will need to highlight students in the completion report that aren't in the local database (and then link with #3 below).\n</li>\n <li> Test activity completion reports </li>\n  <li> import students\n      <p>For existing courses the students user accounts are already imported. But not in a new course. These need to be imported (mapping between local and remote)</li>\n  <li> Back to process analytics </li>\n</ol>"
      },
      "date": 1422388428984
    },
    {
      "type": "move",
      "order": [
        "2b0b5da39374a4a3",
        "040085226c6e10c7",
        "136c61b4af894409",
        "d447cf1d37bf52dd"
      ],
      "id": "2b0b5da39374a4a3",
      "date": 1422388431934
    },
    {
      "type": "move",
      "order": [
        "2b0b5da39374a4a3",
        "d447cf1d37bf52dd",
        "040085226c6e10c7",
        "136c61b4af894409"
      ],
      "id": "d447cf1d37bf52dd",
      "date": 1422388437157
    },
    {
      "type": "edit",
      "id": "d447cf1d37bf52dd",
      "item": {
        "type": "html",
        "id": "d447cf1d37bf52dd",
        "text": "<ol>\n  <li> parseCompletion.pl \n     <p>Will need to highlight students in the completion report that aren't in the local database (and then link with #3 below).\n</li>\n <li> Test activity completion reports </li>\n  <li> import students\n      <p>For existing courses the students user accounts are already imported. But not in a new course. These need to be imported (mapping between local and remote)</li>\n  <li> Will need to update ActivityCompletion.pm </li>\n  <li> Back to process analytics </li>\n</ol>"
      },
      "date": 1422389875464
    },
    {
      "type": "fork",
      "site": "fedwiki.djon.es",
      "date": 1422419736133
    },
    {
      "item": {
        "type": "factory",
        "id": "d6206a6814694798"
      },
      "id": "d6206a6814694798",
      "type": "add",
      "after": "136c61b4af894409",
      "site": "fedwiki.djon.es",
      "date": 1422419736130
    },
    {
      "type": "edit",
      "id": "d6206a6814694798",
      "item": {
        "type": "paragraph",
        "id": "d6206a6814694798",
        "text": "Done - modified existing script to do the parse completion."
      },
      "date": 1422419751782
    },
    {
      "type": "fork",
      "date": 1422419796640
    },
    {
      "type": "edit",
      "id": "d447cf1d37bf52dd",
      "item": {
        "type": "html",
        "id": "d447cf1d37bf52dd",
        "text": "<ol>\n  <li> parseCompletion.pl <strong>DONE</strong>\n     <p>Will need to highlight students in the completion report that aren't in the local database (and then link with #3 below).\n</li>\n <li> Test activity completion reports </li>\n  <li> import students\n      <p>For existing courses the students user accounts are already imported. But not in a new course. These need to be imported (mapping between local and remote)</li>\n  <li> Will need to update ActivityCompletion.pm </li>\n  <li> Back to process analytics </li>\n</ol>"
      },
      "date": 1422419834219
    },
    {
      "item": {
        "type": "factory",
        "id": "5793f4d9879b2a65"
      },
      "id": "5793f4d9879b2a65",
      "type": "add",
      "after": "d6206a6814694798",
      "date": 1422419836874
    },
    {
      "item": {
        "type": "factory",
        "id": "6e5bf18f816e1ded"
      },
      "id": "6e5bf18f816e1ded",
      "type": "add",
      "after": "5793f4d9879b2a65",
      "date": 1422419847002
    },
    {
      "type": "edit",
      "id": "5793f4d9879b2a65",
      "item": {
        "type": "markdown",
        "id": "5793f4d9879b2a65",
        "text": "##Process analytics"
      },
      "date": 1422419849823
    },
    {
      "item": {
        "type": "factory",
        "id": "d83cea7274939a61"
      },
      "id": "d83cea7274939a61",
      "type": "add",
      "after": "6e5bf18f816e1ded",
      "date": 1422419859344
    },
    {
      "type": "edit",
      "id": "6e5bf18f816e1ded",
      "item": {
        "type": "html",
        "id": "6e5bf18f816e1ded",
        "text": "<p>activity_mapping table gives the number of activities per course and per topic/week. </p>\n<p><em>Missing:</em> which modules the topics belong to. URLs for the activities. </p>\n<p>"
      },
      "date": 1422419926275
    },
    {
      "type": "edit",
      "id": "6e5bf18f816e1ded",
      "item": {
        "type": "html",
        "id": "6e5bf18f816e1ded",
        "text": "<p>activity_mapping table gives the number of activities per course and per topic/week. </p>\n<p><em>Missing:</em> which modules the topics belong to. URLs for the activities. </p>\n<p>mdl_course_modules_completion table gives the activities that have been completed by the student</p>\n<p>Process will be something like</p>\n<ol>\n  <li> Use activity mapping to calculate total number of activities and also # activities per week </li>\n  <li> Will have to hard code and/or create another table to group weeks into Modules. \n  <p>module_topic_mapping: [ id, course_id, module_name, module_num, topic_num, topic_name ] (maybe not name)</p>\n  </li>\n  <li> Use course modules completion table to get the details about what the user has completed.</li>\n</ol>\n<p>To calculate what the user has completed per module/week - will need to link via activity id.  </p>\n<p>Perhaps user completion is hash based on activity id</p>\n<p>Then each module has a structure for each week and each activity, that includes at some level an activity id.</p>\n<p>This can get populated.</p>"
      },
      "date": 1422420151623
    },
    {
      "item": {
        "type": "factory",
        "id": "02bbc6e03813d2df"
      },
      "id": "02bbc6e03813d2df",
      "type": "add",
      "after": "d83cea7274939a61",
      "date": 1422420180078
    },
    {
      "type": "edit",
      "id": "d83cea7274939a61",
      "item": {
        "type": "html",
        "id": "d83cea7274939a61",
        "text": "<strong>Steps</strong>\n<ol>\n  <li> Get process analytics showing how many activities a student has completed and perhaps a percentage. </li>\n  <li> Then think about the broader display and doing the same per week and module</li>\n</ol>"
      },
      "date": 1422420227613
    },
    {
      "type": "edit",
      "id": "d83cea7274939a61",
      "item": {
        "type": "html",
        "id": "d83cea7274939a61",
        "text": "<strong>Steps</strong>\n<ol>\n  <li> <strong>IMPORTANT</strong> Will now have problems (probably) about talking to the correct Postgres database. </li>\n  <li> Get process analytics showing how many activities a student has completed and perhaps a percentage. </li>\n  <li> Then think about the broader display and doing the same per week and module</li>\n</ol>"
      },
      "date": 1422420563088
    },
    {
      "type": "edit",
      "id": "d83cea7274939a61",
      "item": {
        "type": "html",
        "id": "d83cea7274939a61",
        "text": "<strong>Steps</strong>\n<ol>\n  <li> <strong>IMPORTANT</strong> Will now have problems (probably) about talking to the correct Postgres database. \n  \n     <p>??? Can we modify Perl scripts to write to the new database, not the old? </p>\n</li>\n  <li> Get process analytics showing how many activities a student has completed and perhaps a percentage. </li>\n  <li> Then think about the broader display and doing the same per week and module</li>\n</ol>"
      },
      "date": 1422420952401
    },
    {
      "type": "edit",
      "id": "d83cea7274939a61",
      "item": {
        "type": "html",
        "id": "d83cea7274939a61",
        "text": "<strong>Steps</strong>\n<ol>\n  <li> <strong>IMPORTANT</strong> Will now have problems (probably) about talking to the correct Postgres database. \n  \n     <p>??? Can we modify Perl scripts to write to the new database, not the old? </p><p>May not need to, the php on the server is still pointing to the old database.</p>\n</li>\n  <li> Get process analytics showing how many activities a student has completed and perhaps a percentage. </li>\n  <li> Then think about the broader display and doing the same per week and module</li>\n</ol>"
      },
      "date": 1422421002235
    },
    {
      "type": "edit",
      "id": "d83cea7274939a61",
      "item": {
        "type": "html",
        "id": "d83cea7274939a61",
        "text": "<strong>Steps</strong>\n<ol>\n  <li> <strong>IMPORTANT</strong> Will now have problems (probably) about talking to the correct Postgres database. \n  \n     <p>??? Can we modify Perl scripts to write to the new database, not the old? </p><p>May not need to, the php on the server is still pointing to the old database.</p>\n</li>\n  <li> Get process analytics showing how many activities a student has completed and perhaps a percentage. \n    <p>  Basically done.</p>\n</li>\n  <li> Then think about the broader display and doing the same per week and module\n\n   </li>\n</ol>"
      },
      "date": 1422422023953
    }
  ]
}